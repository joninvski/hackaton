@model WalletSaverDashboards.Models.Home

<div class="row">
    <div class="col-md-4 text-center">
        <div id="pie1"></div>
        <h3>Calls</h3>
    </div>
    <div class="col-md-4 text-center">
        <div id="pie2"></div>
        <h3>Data</h3>
    </div>
    <div class="col-md-4 text-center">
        <div id="pie3"></div>
        <h3>Messages</h3>
    </div>
</div>

@section scripts{
    <script>
        function DrawPieChart (elem, w, h, data, clickToUrl)
        {
            function animateFirstStep()
            {
                d3.select(this)
                    .transition()
                    .attr("d",arc)
                    .style("fill", "black");
            }

            function animateSecondStep()
            {
                d3.select(this)
                    .transition()
                    .ease("elastic")
                    .duration(1500)
                    .attr("d", arc)
                    .style("fill", function(d) { return color(d.data)});
            }

            function click()
            {
                window.location.href = clickToUrl;
            }

            var radius = Math.min(w, h) / 2;
            var width = w;
            var height = h;

            var color = d3.scale.ordinal()
                .range(["#98abc5", "#ff8c00"]);

            var arc = d3.svg.arc()
                .outerRadius(radius - 10)
                .innerRadius(0);

            var pie = d3.layout.pie()
                .sort(null)
                .value(function(d) { return d; });

            var svg = d3.select(elem).append("svg:svg")
                .attr("width", width)
                .attr("height", height)
                .append("g")
                .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

            data.forEach(function(d) {
                d = +d;
            });

            var g = svg.selectAll(".arc")
                .data(pie(data))
              .enter().append("g")
                .attr("class", "arc");

            g.append("path")
                .attr("d", arc)
                .style("fill", function(d) { return color(d.data); })
                .on("mouseover", animateFirstStep)
                .on("mouseout", animateSecondStep)
                .on("click", click);

            g.append("text")
                .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
                .attr("dy", ".35em")
                .style("text-anchor", "middle")
                .text(function(d) { return d.data; });

        }


        var inboundData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

        var Model = {
            data: ko.mapping.fromJS(inboundData),

            firstPie: [inboundData.total_calls_incoming, inboundData.total_calls_outgoing],
            secondPie: [inboundData.total_data_incoming, inboundData.total_data_outgoing],
            thirdPie: [inboundData.total_messages_incoming, inboundData.total_messages_outgoing]
        };

        ko.applyBindings(Model);
        DrawPieChart("#pie1", 300, 300, Model.firstPie, "/Home/Calls");
        DrawPieChart("#pie2", 300, 300, Model.secondPie, "/Home/Data");
        DrawPieChart("#pie3", 300, 300, Model.thirdPie, "/Home/Messages");

    </script>
}